% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngamma.R
\name{sdm}
\alias{sdm}
\title{A sampler for the Spatial Durbin Model with exogeneous spatial weight matrix.}
\usage{
sdm(
  Y,
  tt,
  W,
  X = matrix(0, nrow(Y), 0),
  Z = matrix(1, nrow(Y), 1),
  niter = 1000,
  nretain = 250,
  rho_prior = rho_priors(),
  beta_prior = beta_priors(k = ncol(X)),
  sigma_prior = sigma_priors()
)
}
\arguments{
\item{Y}{numeric \eqn{tt * n} by \eqn{1} matrix containing the dependent variables.}

\item{tt}{single number greater or equal to 1. Denotes the number of time observations.}

\item{W}{numeric, non-negative \eqn{n} by \eqn{n} exogenous spatial weight matrix. Must have
zeros on the main diagonal.}

\item{X}{numeric \eqn{tt * n} by \eqn{k_1} design matrix of independent variables.}

\item{Z}{An \eqn{tt * n} by \eqn{k_3} design matrix of independent variables.}

\item{niter}{single number greater or equal to 1, indicating the total number of draws.
Will be automatically coerced to integer. The default value is 1000.}

\item{nretain}{single number greater or equal to 0, indicating the number of draws
kept after the burn-in. Will be automatically coerced to integer. The default value is 500.}

\item{rho_prior}{List of priors for estimating \eqn{\rho}, generated by the smart constructor \code{\link{rho_priors}}}

\item{beta_prior}{List of priors for the slope coefficients \eqn{\beta},
generated by the smart constructor \code{\link{beta_priors}}.}

\item{sigma_prior}{List of priors for the error variance \eqn{\sigma^2},
generated by the smart constructor \code{\link{sigma_priors}}}
}
\description{
The sampler uses independent an Normal-Gamma prior for the slope and variance parameters,
as well as the four-parameter prior for the spatial autoregressive parameter. The function is
meant intended as an illustration on using the \code{\link{beta_sampler}}, \code{\link{sigma_sampler}},
and \code{\link{rho_sampler}} classes.
}
\examples{
n = 20; tt = 10
dgp_dat = sim_dgp(n =n, tt = tt, rho = .5, beta1 = c(.5,1),beta2 = c(-1,.5),
                  beta3 = c(1.5), sigma2 = .5)
res = sdm(Y = dgp_dat$Y,tt = tt, W = dgp_dat$W,X = dgp_dat$X,Z = dgp_dat$Z,niter = 200,nretain = 100)
}
