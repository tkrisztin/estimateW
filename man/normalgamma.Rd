% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngamma.R
\name{normalgamma}
\alias{normalgamma}
\title{A Markov Chain Monte Carlo (MCMC) sampler for a linear panel model with independent Normal-Gamma priors}
\usage{
normalgamma(
  Y,
  tt,
  X = matrix(1, nrow(Y), 1),
  niter = 1000,
  nretain = 250,
  beta_prior = beta_priors(k = ncol(X)),
  sigma_prior = sigma_priors()
)
}
\arguments{
\item{Y}{numeric \eqn{N \times 1} matrix containing the dependent variables, where \eqn{N} is the number of
spatial (\eqn{n}) times time observations (\eqn{tt=T}). Note that the observations have to be ordered first by
\eqn{n} and then by \eqn{T}.}

\item{tt}{single number greater or equal to 1. Denotes the number of time observations. \eqn{tt = T}.}

\item{X}{numeric \eqn{N \times k_1} design matrix of independent variables.}

\item{niter}{single number greater or equal to 1, indicating the total number of draws.
Will be automatically coerced to integer. The default value is 1000.}

\item{nretain}{single number greater or equal to 0, indicating the number of draws
kept after the burn-in. Will be automatically coerced to integer. The default value is 250.}

\item{beta_prior}{list containing priors for the slope coefficients \eqn{\beta},
generated by the smart constructor \code{\link{beta_priors}}.}

\item{sigma_prior}{list containing priors for the error variance \eqn{\sigma^2},
generated by the smart constructor \code{\link{sigma_priors}}}
}
\description{
The sampler uses independent Normal-Gamma priors to estimate a linear panel data model. The function is
used for an illustration on using the \code{\link{beta_sampler}} and \code{\link{sigma_sampler}}
classes.
}
\details{
#' The considered model takes the form:

\deqn{
 Y_t = X_t \beta_1 + Z \beta_2 + \varepsilon_t,
 }

with \eqn{\varepsilon_t \sim N(0,I_n \sigma^2)}.

\eqn{Y_t} (\eqn{n \times 1}) collects the \eqn{n} cross-sectional observations for time
\eqn{t=1,...,T}. \eqn{X_t} (\eqn{n \times k_1}) and \eqn{Z_t} (\eqn{n \times k_2}) are
matrices of explanatory variables. \eqn{\beta_1} (\eqn{k_1 \times 1}) and \eqn{\beta_2} (\eqn{k_1 \times 1})
are unknown slope parameter vectors.

After vertically staking the \eqn{T} cross-sections  \eqn{Y=[Y_1',...,Y_T']'} (\eqn{N \times 1}),
\eqn{X=[X_1',...,X_T']'} (\eqn{N \times k_1}) and \eqn{Z=[Z_1', ..., Z_T']'} (\eqn{N \times k_2}),
with \eqn{N=nT}. The final model can be expressed as:

\deqn{
 Y = X \beta_1 + Z \beta_2 + \varepsilon,
}

where \eqn{\varepsilon \sim N(0,I_N \sigma^2)}. Note that the input
data matrices have to be ordered first by the cross-sectional units and then stacked by time.
}
\examples{
n = 20; tt = 10; k = 3
X = matrix(stats::rnorm(n*tt*k),n*tt,k)
Y = X \%*\% c(1,0,-1) + stats::rnorm(n*tt,0,.5)
res = normalgamma(Y,tt,X)
}
